#!/bin/bash

if [[ $EUID -ne 0 ]]; then
   echo -e "\033[0;31m[-] This script must be run as root"
   exit 1
fi

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd $DIR

terraform init
printf "\n\n\n"
terraform apply -auto-approve

IP=`terraform output -raw public_ip`

sleep 10

echo -e "\033[0;36m[+] Sending deploy script"
scp -o "StrictHostKeyChecking=accept-new" -i $DIR/bugVPN.key $DIR/deploy.sh ubuntu@$IP:deploy.sh
echo -e "\033[0;36m[+] Running deploy script"
ssh -i $DIR/bugVPN.key ubuntu@$IP 'chmod +x ~/deploy.sh; ~/deploy.sh'
echo -e "\033[0;36m[+] Getting OVPN file"
scp -i $DIR/bugVPN.key ubuntu@$IP:bugVPN.ovpn $DIR/bugVPN.ovpn

printf "\n\n\n"
aws ec2 describe-instances |
    jq -j '.[] | .[] | .Instances | .[].LaunchTime, " - ", .[].State.Name, "\n"' |
    sort
aws ec2 describe-volumes \
    --query 'Volumes[*].{ID:VolumeId,InstanceId:Attachments[0].InstanceId,AZ:AvailabilityZone,Size:Size}'


printf "\n\n\n"
sudo screen -S "BUG" -d -m openvpn $DIR/bugVPN.ovpn
echo -e "\033[0;32m[+] Started BUG VPN"

sleep 2
ifconfig tun0
