- name: Update apt
  command:
    cmd: apt update

- name: Update apt packages
  become: yes
  apt:
    upgrade: yes
    update_cache: yes

- name: Install openvpn
  package:
   name: "{{ item }}"
   state: present
  with_items:
    - openvpn
    - easy-rsa

- name: "Remove CA directory"
  become: yes
  file:
    state: absent
    path: "{{ ansible_env.HOME }}/openvpn-ca/"

- name: "Create CA dir"
  become: yes
  command: make-cadir {{ ansible_env.HOME }}/openvpn-ca

- name: Customize CA variable configuration
  lineinfile:
    dest: "{{ ansible_env.HOME }}/openvpn-ca/vars"
    regexp: "^{{ item.property | regex_escape() }}="
    line: "{{ item.property }}={{ item.value }}"
  with_items:
    - { property: 'export KEY_NAME', value: '"server"' }
    - { property: 'export KEY_COUNTRY', value: '"US"' }
    - { property: 'export KEY_PROVINCE', value: '"CA"' }
    - { property: 'export KEY_CITY', value: '"SF"' }
    - { property: 'export KEY_ORG', value: '"MT"' }
    - { property: 'export KEY_EMAIL', value: '"email@pykmriptt6mn1u60fgv0.com"' }
    - { property: 'export KEY_OU', value: '"MT"' }
    - { property: 'export KEY_CONFIG', value: '{{ ansible_env.HOME }}/openvpn-ca/openssl-1.0.0.cnf' }
    - { property: 'export KEY_DIR', value: '{{ ansible_env.HOME }}/openvpn-ca/keys' }

- name: "Build the certificate authority"
  become: yes
  shell: >
    source vars;
    ./clean-all;
    yes "" | ./build-ca;
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Build server certificate"
  become: yes
  shell: >
    source vars;
    ./build-key-server --batch server;
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Build Diffie-Hellman parameters and key generation"
  become: yes
  shell: >
    source vars;
    yes "" | ./build-dh;
    openvpn --genkey --secret keys/ta.key;
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Copy key and certificates to /etc/openvpn"
  become: yes
  copy:
    remote_src: yes
    src: "{{ ansible_env.HOME }}/openvpn-ca/keys/{{ item }}"
    dest: "/etc/openvpn/"
  with_items:
    - "ca.crt"
    - "server.crt"
    - "server.key"
    - "ta.key"
    - "dh2048.pem"

- name: "Generate server.conf from sample config"
  become: yes
  shell: >
     gzip -d -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz | sudo tee /etc/openvpn/server.conf > /dev/null
- name: Adjust OpenVPN server configuration
  lineinfile:
    dest: "/etc/openvpn/server.conf"
    regexp: "^{{ item.regex | regex_escape() }}"
    line: "{{ item.value }}"
  with_items:
    - { regex: ';user nobody', value: 'user nobody' }
    - { regex: ';group nogroup', value: 'group nogroup' }
    - { regex: ';push "redirect-gateway def1 bypass-dhcp"', value: 'push "redirect-gateway def1 bypass-dhcp"' }
    - { regex: 'cert server.crt', value: 'cert server.crt' }
    - { regex: 'key server.key', value: 'key server.key' }
    - { regex: 'port 1194', value: 'port 1194' }

- name: Configuration IP forwarding
  become: yes
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present

- name: Add ufw before content
  become: yes
  blockinfile:
    path: /etc/ufw/before.rules
    insertbefore: BOF
    content: |
      # NAT table rules
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s 10.8.0.0/8 -o eth0 -j MASQUERADE
      COMMIT
- name: Customize ufw forwarding policy
  become: yes
  lineinfile:
    line: "DEFAULT_FORWARD_POLICY=\"ACCEPT\""
    path: "/etc/default/ufw"
    regexp: "^DEFAULT_FORWARD_POLICY=\"DROP\""

- name: Open ufw ports for openvpn and ssh
  become: yes
  shell:  ufw allow 22/tcp && ufw allow 1194

- name: Enable ufw
  become: yes
  shell: ufw --force enable

- name: Start openvpn systemd service
  become: yes
  systemd:
    name: openvpn@server
    state: restarted
    daemon_reload: yes
    enabled: yes



- name: "Generate client certificate key"
  become: yes
  shell: source vars; ./build-key --batch bug
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Create client certificate configs dir"
  become: yes
  file:
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    path: "{{ ansible_env.HOME }}/openvpn-ca/bug"
    state: directory
    mode: 0700

- name: "Copy client sample configs from remote host itself"
  become: yes
  copy:
      remote_src: yes
      src: /usr/share/doc/openvpn/examples/sample-config-files/client.conf
      dest: "{{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn"

- name: Set the server ip and port
  lineinfile:
    dest: "{{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn"
    regexp: "^{{ item.regex | regex_escape() }}"
    line: "{{ item.value }}"
  with_items:
    - { regex: 'remote my-server-1 1194', value: 'remote {{ groups["OpenVPN"][0] }} 1194' }
    # Keep permissions for "down /etc/openvpn/update-resolv-conf" script
    # - { regex: ';user nobody', value: 'user nobody' }
    # - { regex: ';group nogroup', value: 'group nogroup' }
    - { regex: 'ca ca.crt', value: '#ca ca.crt' }
    - { regex: 'cert client.crt', value: '#cert client.crt' }
    - { regex: 'key client.key', value: '#key client.key' }
    - { regex: 'tls-auth ta.key 1', value: '#tls-auth ta.key 1' }

- name: "Create client ovpn file"
  become: yes
  shell: "{{ item }}"
  with_items:
    # DNS overwrite
    - echo -e 'dhcp-option DNS 8.8.8.8' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e 'dhcp-option DNS 127.0.0.1' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e 'script-security 2' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e 'up /etc/openvpn/update-resolv-conf' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e 'down /etc/openvpn/update-resolv-conf' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn

    - echo -e '<ca>' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - cat {{ ansible_env.HOME }}/openvpn-ca/keys/ca.crt >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e '</ca>\n<cert>' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - cat {{ ansible_env.HOME }}/openvpn-ca/keys/bug.crt >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e '</cert>\n<key>' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - cat {{ ansible_env.HOME }}/openvpn-ca/keys/bug.key >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e '</key>\n<tls-auth>' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - cat {{ ansible_env.HOME }}/openvpn-ca/keys/ta.key >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e '</tls-auth>' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
    - echo -e 'key-direction 1' >> {{ ansible_env.HOME }}/openvpn-ca/bug/bug.ovpn
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: Fetch client configurations
  fetch:
    src: "{{ ansible_env.HOME }}/openvpn-ca/bug/{{ item|basename }}"
    dest: "{{ playbook_dir }}/"
    flat: yes
  with_items:
    - "bug.ovpn"
